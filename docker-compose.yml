services:
  postgres:
    image: postgres:15-alpine
    container_name: fastapi_wallets_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U wallets_user -d wallets_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: fastapi_wallets_app
    environment:
      DATABASE_URL: ${DATABASE_URL}
      TESTING: ${TESTING_MODE}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
    command: >
      sh -c "
        echo 'Ожидание готовности базы данных...' &&
        until pg_isready -h postgres -p 5432 -U wallets_user; do
          echo 'База данных не готова, ожидание...' &&
          sleep 2
        done &&
        echo 'База данных готова!' &&
        echo 'Выполнение миграций...' &&
        alembic upgrade head &&
        echo 'Запуск FastAPI приложения...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000
      "

volumes:
  postgres_data:
